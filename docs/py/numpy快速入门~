1、基本概念
numpy的主要内容是齐次多维数组，是一张表，元素类型相同，通常是数字，索引为一个正整数构成的元组。
在numpy中，数组的维叫做axes，axes的个数叫做rank。
>>> import numpy as np
>>> a = np.arange(15).reshape(3, 5)
>>> a
array([[ 0,  1,  2,  3,  4],
       [ 5,  6,  7,  8,  9],
       [10, 11, 12, 13, 14]])
>>> a.shape
(3, 5)
>>> a.ndim
2
>>> a.dtype.name
'int64'
>>> a.itemsize
8
>>> a.size
15
>>> type(a)
<type 'numpy.ndarray'>
>>> b = np.array([6, 7, 8])
>>> b
array([6, 7, 8])
>>> type(b)
<type 'numpy.ndarray'>
创建数组——
创建数组有多种方法。可以使用array函数，参数为python列表或元组，元素类型会自动推导为numpy中的类型，如下例子。

一个常见的错误是array的参数为多个数字，而不是数字构成的一个列表，如下例子。
>>> a = np.array(1,2,3,4)    # WRONG
>>> a = np.array([1,2,3,4])  # RIGHT

array可以把一个序列的序列转换为二维数组，把一个序列的序列的序列转换为一个三维数组，依次类推，也就是说序列的元素为另一个序列（包括列表和元组），如下例子。

>>> b = np.array([(1.5,2,3), (4,5,6)])
>>> b
array([[ 1.5,  2. ,  3. ],
       [ 4. ,  5. ,  6. ]])
 
许多情况下，数组中的初始元素是未知的，但我们知道数组的大小。numpy提供了几个创建数组中的元素有默认值的函数，以降低给数组中的元素赋值的高昂代价。函数zeros创建的数组中的元素全为0，ones创建的数组中的元素全为1，empty创建的数组中的元素为依赖于内存状态的随机值，它们的数据类型默认为float64，如下例子。

打印数组—— 
打印数组时，numpy以嵌套列表的形式进行显示，最后一个axes的数据从左到右打印，其它的axes的数据从上到下打印。一维数组打印为行，二维数组打印为矩阵，三维数组打印为矩阵的列表，如下例子。

>>> a = np.arange(6)                         # 1d array
>>> print(a)
[0 1 2 3 4 5]
>>>
>>> b = np.arange(12).reshape(4,3)           # 2d array
>>> print(b)
[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
>>>
>>> c = np.arange(24).reshape(2,3,4)         # 3d array
>>> print(c)
[[[ 0  1  2  3]
  [ 4  5  6  7]
  [ 8  9 10 11]]
 [[12 13 14 15]
  [16 17 18 19]
  [20 21 22 23]]]

  拼接数组——
从一些大小相同的一维数组中构建多维数组，在MATLAB中很简单，用法为m=[x;y]，numpy则提供了一些函数，column_stack、dstack、vstack、hstack，如下例子。

x = np.arange(0,10,2)                     # x=([0,2,4,6,8])
y = np.arange(5)                          # y=([0,1,2,3,4])
m = np.vstack([x,y])                      # m=([[0,2,4,6,8],
                                          #     [0,1,2,3,4]])
xy = np.hstack([x,y])                     # xy =([0,2,4,6,8,0,1,2,3,4])


