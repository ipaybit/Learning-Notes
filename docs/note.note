index.php    require(../lib/header.php)  function printHeader($title){   }
order.php
sampleXML API 
../lib/header.php
header.php
footer.php


搭环境之前先介绍一些docker基础命令：

docker images  查看已下载的镜像

docker ps  查看正在运行的容器

docker ps -a 查看所有容器

docker stop 容器id 停止正在运行的容器

docker rm 容器id 删除容器

docker rmi 镜像id 删除images

docker容器和镜像的理解可以参考：docker镜像与容器

详解如何使用Docker部署一个web项目并打包成镜像文件
---------------------
docker基本入门以后，可以试试打包docker镜像与dockerfile了

docker镜像

docker hub仓库有2类仓库，用户仓库和顶层仓库，用户仓库由docker用户创建的，顶层仓库由docker内部的人来管理的。仓库里存放的是镜像文件，那么问题来了 ，怎么去创建镜像呢？

how to create image

构建docker镜像的有2种方法：

1.使用docker commit命令。

2.使用docker build 命令和Dockerfile文件。在这里并不推荐使用docker commit命令，而应该使用更灵活，更强大的Dockerfile来构建镜像..

1.创建一个centos镜像

通过命令下载dockerhub上的官方镜像
?
1

docker pull centos

2.创建一个基于centos镜像的容器

通过命令docker images查看服务器上已有的镜像

通过命令
docker run -dit -p 4000:8080 centos镜像名或id

创建一个基于centos镜像的容器在后台运行并将服务器的4000端口映射到容器中的8080端口

docker run -i -t <image_name/continar_id> /bin/bash 启动容器并启动bash（交互方式） docker run -d -it image_name 启动容器以后台方式运行(更通用的方式） docker ps 列出当前所有正在运行的container docker ps -a 列出所有的container docker ps -l 列出最近一次启动的container docker images 列出本地所有的镜像 docker rmi imagesID 删除指定的镜像id docker rm CONTAINER ID 删除指定的CONTAINER id docker diff 镜像名 查看容器的修改部分 docker kill CONTAINER ID 杀掉正在运行的容器 docker logs 容器ID/name 可以查看到容器主程序的输出 docker pull image_name 下载image docker push image_name 发布docker镜像 docker version 查看docker版本 docker info 查看docker系统的信息 docker inspect 容器的id 可以查看更详细的关于某一个容器的信息 docker run -d image-name 后台运行镜像 docker search 镜像名 查找公共的可用镜像 docker stop 容器名/容器 ID 终止运行的容器 docker restart 容器名/容器 ID 重启容器 docker commit 提交，创建个新镜像 docker build [OPTIONS] PATH | URL | - 利用 Dockerfile 创建新镜像
